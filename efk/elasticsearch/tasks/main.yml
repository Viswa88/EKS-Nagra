---
- name: "ElasticSearch | Write efk manifests (RBAC)"
  become: true
  template:
    src: "{{ item }}"
    dest: "{{ kube_config_dir }}/{{ item }}"
  with_items:
    - "efk-sa.yml"
    - "efk-clusterrolebinding.yml"
  run_once: true
  when: rbac_enabled

- name: "ElasticSearch | Create Serviceaccount and Clusterrolebinding (RBAC)"
  command: "{{ bin_dir }}/kubectl apply -f {{ kube_config_dir }}/{{ item }} -n kube-system"
  with_items:
    - "efk-sa.yml"
    - "efk-clusterrolebinding.yml"
  run_once: true
  when: rbac_enabled

- name: "ElasticSearch | Write ES storage"
  become: true
  template:
    src: elasticsearch-storage.yml.j2
    dest: "{{ kube_config_dir }}/elasticsearch-storage.yml"

- name: "ElasticSearch | Create ES storage"
  command: "{{ bin_dir }}/kubectl apply -f {{ kube_config_dir }}/elasticsearch-storage.yml"
  run_once: true

- name: "ElasticSearch | Write ES deployment"
  become: true
  template:
    src: elasticsearch-deployment.yml.j2
    dest: "{{ kube_config_dir }}/elasticsearch-deployment.yaml"

- name: "ElasticSearch | Delete ES deployment if already exists"
  command: "kubectl delete statefulset elasticsearch-logging -n kube-system"
  run_once: true
  ignore_errors: true  
  
- name: "ElasticSearch | Create ES deployment"
  command: "{{ bin_dir }}/kubectl apply -f {{ kube_config_dir }}/elasticsearch-deployment.yaml -n kube-system"
  run_once: true

- name: Search for created volumes
  delegate_to: 127.0.0.1
  ec2_vol_info:
    aws_access_key: "{{aws_access_key}}"
    aws_secret_key: "{{aws_secret_key}}"
    region: "{{vpc['region']}}"
    filters:
      "tag:kubernetes.io/created-for/pvc/name": "{{ environment_name }}-data-elasticsearch-logging-*"
  register: volumes_facts
  retries: 60
  delay: 10
  # wait that both volumes are available
  until: volumes_facts.volumes is defined and (volumes_facts.volumes | length >=  2)

- name: Tag volumes according to OPF3 policies
  include_role:
    name: global_tags/assign
  vars:
    resource_id: "{{ item['id'] }}"
    base_tags:
      environment: "{{ environment_name }}"
      vpc_name: "{{ vpc_name }}"
    domain_tags: "{{ domain_custom_tags['kubernetes'] | default({})  }}"   
    additional_tags: "{{ base_tags | combine(domain_tags)  }}" 
  with_items: "{{ volumes_facts.volumes }}"
 
- name: "ElasticSearch | Write ES service "
  become: true
  template:
    src: elasticsearch-service.yml.j2
    dest: "{{ kube_config_dir }}/elasticsearch-service.yaml"

- name: "ElasticSearch | Create ES service"
  command: "{{ bin_dir }}/kubectl apply -f {{ kube_config_dir }}/elasticsearch-service.yaml -n kube-system"
  run_once: true
